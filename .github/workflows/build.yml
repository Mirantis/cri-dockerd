name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    name: cri-tools CI
    runs-on: ubuntu-18.04
    timeout-minutes: 60
    steps:

      - name: Set up Go 1.14
        uses: actions/setup-go@v1
        with:
          go-version: 1.14
        id: go

      - name: Setup Go binary path
        shell: bash
        run: |
          echo "GOPATH=${{ github.workspace }}" >> $GITHUB_ENV
          echo "${{ github.workspace }}/bin" >> $GITHUB_PATH

      - name: Checkout cri-dockerd
        uses: actions/checkout@v2
        with:
          repository: evol262/cri-dockerd
          path: src/github.com/evol262/cri-dockerd

      - name: Install docker
        shell: bash
        run: |
          arch=$(dpkg --print-architecture)

          # Workarounds for error "Failed to fetch https://packagecloud.io/github/git-lfs/ubuntu/dists/trusty/InRelease"
          # TODO: remove it after the issue fixed in git-lfs.
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 6B05F25D762E3157
          sudo apt-get update

          # Install prereqs
          sudo apt-get install -y \
            conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod \
            libseccomp2

          # Install docker.
          sudo apt-get install -y \
            apt-transport-https \
            ca-certificates \
            curl socat \
            gnupg-agent \
            software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository \
          "deb [arch=$arch] https://download.docker.com/linux/ubuntu \
           $(lsb_release -cs) \
           stable"
          sudo apt-get update
          sudo apt-cache madison docker-ce
          sudo apt-get install docker-ce docker-ce-cli containerd.io

          # Restart docker daemon.
          sudo service docker restart

      - name: Build cri-dockerd
        working-directory: src/github.com/evol262/cri-dockerd
        run: |
          make deb
          make rpm
          make static

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: artifacts
          path: packaging/debs
